<!DOCTYPE html>
<html>
  <head>
    <% const ROOT_DIR = process.cwd() %>
    <%- include(ROOT_DIR + '/views/layout/include'); %>
  </head>
  <body class="text-center">
    <header>
      <%- include(ROOT_DIR + '/views/layout/header'); %>
    </header>
    <main class="form-signin">
      <form>
        <img class="mb-4" src="" alt="로고" width="72" height="57">
        <h1 class="h3 mb-3 fw-normal">회원가입</h1>
        
    
        <div class="form-floating input-group">
          <input type="email" class="form-control form-register-top" id="email" placeholder="name@example.com">
          <label for="email">Email address</label>
        </div>
        <div class="form-floating">
          <input type="password" class="form-control form-register-middle" id="password" placeholder="Password">
          <label for="password">비밀번호</label>
        </div>
        <div class="form-floating">
          <input type="password" class="form-control form-register-middle" id="passwordConfirm" placeholder="Password">
          <label for="passwordConfirm">비밀번호 확인</label>
        </div>
        <div class="form-floating">
          <input type="text" class="form-control form-register-bottom" id="nickname" placeholder="Password">
          <label for="nickname">닉네임</label>
        </div>
    
        <div class="form-floating form-label-left">
          <h5><%= title %> 필수 약관 동의</h5>
          <% for(var i = 0; i < requiredTos.length; i++) { %>
            <%= requiredTos[i].title %>
            <textarea class="form-control required-tOS" style="height:100px;"><%= requiredTos[i].content %></textarea>
            <div class="checkbox mb-3 form-label-left">
              <label>
                <input class="required-checkbox" id="required_<%= i %>" type="checkbox" value="<%= requiredTos[i]._id %>"> 동의합니다. <span class="form-tos-required">(필수)</span>
              </label>
            </div>
          <% } %>
        </div>
        

        <div class="form-floating form-label-left">
          <h5><%= title %> 선택 약관 동의</h5>
          <% for(var i = 0; i < selectionTos.length; i++) { %>
            <%= selectionTos[i].title %>
            <textarea class="form-control selection-tos" style="height:100px;"><%= selectionTos[i].content %></textarea>
            <div class="checkbox mb-3 form-label-left">
              <label>
                <input class="selection-checkbox" id="selection_<%= i %>" type="checkbox" value="<%= selectionTos[i]._id %>"> 동의합니다. (선택)
              </label>
            </div>
          <% } %>
        </div>
        

        <div class="row mb-3">
          <div class="col-12">
            <button id="registerBtn" class="w-100 btn btn-lg btn-primary" type="button">회원가입</button>
          </div>
        </div>

        <%- include(ROOT_DIR + '/views/layout/accountFooter'); %>
      </form>
    </main>
  </body>
</html>
<script type="text/javascript">
  let registerBtn = document.getElementById("registerBtn");
  let emailElem = document.getElementById("email");
  let passwordElem = document.getElementById("password");
  let passwordConfirmElem = document.getElementById("passwordConfirm");
  let nicknameElem = document.getElementById("nickname");
  let requiredTOS = document.getElementById("requiredTOS")
  let selectionTOS = document.getElementById("selectionTOS")

  let valid = {
    email: false,
    nickname: false,
    password: false,
    loadTosRequired: false,
    loadTosSelection: false,
  }

  const checkEmail = async function(){
    try {
      if(fn_valid_check_email(emailElem.value)){
        let result = await axios.get("/API/user/duplicate/email/"+emailElem.value)
        return !result.data
      } else {
        return false;
      }
    } catch (err) {
      alert("서버 통신에 문제가 있습니다.")
      console.error(err)
      return false;
    }
  }
  const checkNickname = async function(){
    try {
      if(fn_valid_nickname(nicknameElem.value)){
        let result = await axios.get("/API/user/duplicate/nickname/"+nicknameElem.value)
        console.log("??:"+!result.data)
        return !result.data
      } else {
        console.log("??:"+false)
        return false;
      }
    } catch (err) {
      alert("서버 통신에 문제가 있습니다.")
      console.error(err)
      return false;
    }
  }
  const checkPassword = function(){
    if (passwordElem.value === passwordConfirmElem.value) {
      // 패스워드 맞는지 그림으로 표기. 클래스?를 바꿔주던지
      valid.nickname = true;
      return true;
    } else {
      // 패스워드 맞는지 그림으로 표기. 클래스?를 바꿔주던지
      valid.nickname = false;
      return false;
    }
  }
  emailElem.addEventListener("focusout", async function(e){
    if(await checkEmail(emailElem.value)){
      console.log("email available");
      valid.email = true;
    } else {
      console.log("email unavailable");
      valid.email = false;
    }
  })
  passwordElem.addEventListener("focusout", async function(e){
    if(await checkPassword(passwordElem.value)){
      console.log("password 1");
    } else {
      console.log("password 2");
    }
  })
  passwordConfirmElem.addEventListener("focusout", async function(e){
    if(await checkPassword(passwordElem.value)){
      console.log("password available");
    } else {
      console.log("password unavailable");
    }
  })
  nicknameElem.addEventListener("focusout", async function(e){
    if(await checkNickname(nicknameElem.value)){
      let result = await checkNickname(nicknameElem.value)
      console.log("nickname available");
      console.log("??!!:"+result);
      valid.nickname = true;
    } else {
      console.log("nickname unavailable");
      valid.nickname = false;
    }
  })

  registerBtn.addEventListener("click", function(e){
    // check valid
    
    let data = {};
    data.email = emailElem.value;
    data.password = passwordElem.value;
    data.nickname = nicknameElem.value;
    console.log(data);

    axios.post("/API/user/login/local", data, { headers: {"Content-Type": "multipart/form-data"}})
      .then(response => {
        console.log("로그인 성공")
        console.log(response)
      })
      .catch(err => {
        console.error(err)
      })
    
  })
</script>
<style>
html,
body {
  height: 100%;
}

body {
  display: flex;
  align-items: center;
  padding-top: 40px;
  padding-bottom: 40px;
  background-color: #f5f5f5;
}

.form-signin {
  width: 100%;
  max-width: 660px;
  padding: 15px;
  margin: auto;
}

.form-signin .checkbox {
  font-weight: 400;
}

.form-signin .form-floating:focus-within {
  z-index: 2;
}

.form-register-top {
  margin-bottom: -1px;
  border-bottom-right-radius: 0;
  border-bottom-left-radius: 0;
}
.form-register-middle {
  margin-bottom: -1px;
  border-radius: 0;
}
.form-register-bottom {
  margin-bottom: 10px;
  border-top-left-radius: 0;
  border-top-right-radius: 0;
}
.form-register-tos {
  height: 300px;
}
.form-tos-required {
  color: red;
}
.form-label-left {
  text-align: left!important;
}

.form-signup {
  border: #cacaca 1px solid;
  border-radius: 0.3rem;
  font-size: 0.75rem;
}

.icon-red {
  color: red;
}
.icon-green {
  color: #55dd44;
}

.bd-placeholder-img {
  font-size: 1.125rem;
  text-anchor: middle;
  -webkit-user-select: none;
  -moz-user-select: none;
  user-select: none;
}

@media (min-width: 768px) {
  .bd-placeholder-img-lg {
    font-size: 3.5rem;
  }
}
</style>